1. How did viewing a diff between two versions of a file help you see the bug that was introduced?

I saw that there was a change between the old and the new versions of the file. When I looked at this change, I was able to see the bug. 

2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It will help me to see where things started going wrong or where a thought process started, making me get to the root of a problem.

3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

It is possible to commit too often or too rarely. 

4. How can you use the commands git log and git diff to view the history of files?

git log --stat shows all the commits, starting with the most recent first. I look for the commit IDs of the commits I want to compare

git diff shows differences between the two commits based on their IDs. - means removed lines. + means added lines.

5. How might using version control make you more confident to make changes that could break something?

Knowing that I can always go back to the previous version gives me more freedom to experiment. :-)